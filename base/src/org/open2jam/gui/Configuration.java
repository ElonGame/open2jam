/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * configuration.java
 *
 * Created on Dec 14, 2010, 1:54:48 PM
 */

package org.open2jam.gui;

import java.awt.Font;
import java.util.EnumMap;
import java.util.HashMap;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import org.lwjgl.LWJGLException;
import org.lwjgl.input.Keyboard;
import org.lwjgl.opengl.Display;
import org.lwjgl.opengl.DisplayMode;
import org.lwjgl.opengl.GL11;
import org.open2jam.Config;
import org.open2jam.parser.Event;
import org.open2jam.util.TrueTypeFont;


/**
 *
 * @author Administrador
 */
public class Configuration extends javax.swing.JFrame {

    EnumMap<Event.Channel,Integer> kb_map;

    HashMap<Integer, Event.Channel> table_map = new HashMap<Integer,Event.Channel>();

    /** Creates new form configuration */
    public Configuration() {
        initComponents();
        loadConfig(Config.KeyboardType.K7);
	this.setLocationRelativeTo(null);
    }



    private void loadConfig(Config.KeyboardType kt)
    {
        kb_map = Config.get().getKeyboardMap(kt).clone();
        DefaultTableModel dm = (DefaultTableModel)tKeys.getModel();
        dm.setRowCount(kb_map.size());
        int i = 0;
        for(Map.Entry<Event.Channel,Integer> entry : kb_map.entrySet())
        {
            tKeys.setValueAt(entry.getKey().toString(), i, 0);
            tKeys.setValueAt(Keyboard.getKeyName(entry.getValue()), i, 1);
            table_map.put(i, entry.getKey());
            i++;
        }
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_folders = new javax.swing.JPanel();
        bAddFolder = new javax.swing.JButton();
        bSave = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        tKeys_scroll = new javax.swing.JScrollPane();
        tKeys = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        combo_keyboardConfig = new javax.swing.JComboBox();

        setTitle("Configuration");
        setResizable(false);

        bAddFolder.setText("Add Folder");

        javax.swing.GroupLayout panel_foldersLayout = new javax.swing.GroupLayout(panel_folders);
        panel_folders.setLayout(panel_foldersLayout);
        panel_foldersLayout.setHorizontalGroup(
            panel_foldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_foldersLayout.createSequentialGroup()
                .addContainerGap(548, Short.MAX_VALUE)
                .addComponent(bAddFolder)
                .addContainerGap())
        );
        panel_foldersLayout.setVerticalGroup(
            panel_foldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_foldersLayout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(bAddFolder)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bSave.setFont(new java.awt.Font("Tahoma", 1, 11));
        bSave.setText("Save");
        bSave.setMaximumSize(new java.awt.Dimension(65, 23));
        bSave.setMinimumSize(new java.awt.Dimension(65, 23));
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });

        bCancel.setText("Cancel");
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });

        tKeys.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Key", "Assign"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tKeys.setColumnSelectionAllowed(true);
        tKeys.getTableHeader().setReorderingAllowed(false);
        tKeys.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tKeysMouseClicked(evt);
            }
        });
        tKeys_scroll.setViewportView(tKeys);
        tKeys.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel1.setText("Select the keyboard configuration you want to edit:");

        combo_keyboardConfig.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "7 Keys", "5 Keys", "6 Keys", "4 Keys", "8 Keys" }));
        combo_keyboardConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_keyboardConfigActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_folders, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combo_keyboardConfig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 202, Short.MAX_VALUE)
                        .addComponent(bSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bCancel))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE)
                    .addComponent(tKeys_scroll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_folders, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tKeys_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bCancel)
                    .addComponent(bSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(combo_keyboardConfig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        loadConfig(Config.KeyboardType.K7);
        this.dispose();
    }//GEN-LAST:event_bCancelActionPerformed

    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
        Config.KeyboardType kt;
        switch(combo_keyboardConfig.getSelectedIndex())
        {
            case 0:kt = Config.KeyboardType.K7;break;
            case 1:kt = Config.KeyboardType.K5;break;
            case 2:kt = Config.KeyboardType.K6;break;
            case 3:kt = Config.KeyboardType.K4;break;
            case 4:kt = Config.KeyboardType.K8;break;
            default: return;
        }
        Config.get().setKeyboardMap(kb_map, kt);
        Config.get().save();
	this.dispose();
    }//GEN-LAST:event_bSaveActionPerformed


    private void tKeysMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tKeysMouseClicked
        int row = tKeys.getSelectedRow();
        if(tKeys.getValueAt(row, 0) == null) return;

        int code = -1;
        int lastkey = Keyboard.getKeyIndex(tKeys.getValueAt(row, 1).toString());
        try {
            code = read_keyboard_key(lastkey);
        } catch(LWJGLException e) {
            // FML
            return;
        }
        Event.Channel c = table_map.get(row);
        kb_map.put(c, code);
        tKeys.setValueAt(Keyboard.getKeyName(code), row, 1);
    }//GEN-LAST:event_tKeysMouseClicked

    private void combo_keyboardConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_keyboardConfigActionPerformed
        // TODO get a message asking if you change, the changes will not be saved
        // Also, it would be a good idea to get the keys of the skin and only show those
        // or maybe put the names of the combo like "8 Keys (not supported)" when the keys don't match
        switch(combo_keyboardConfig.getSelectedIndex())
        {
            case 0:loadConfig(Config.KeyboardType.K7);break;
            case 1:loadConfig(Config.KeyboardType.K5);break;
            case 2:loadConfig(Config.KeyboardType.K6);break;
            case 3:loadConfig(Config.KeyboardType.K4);break;
            case 4:loadConfig(Config.KeyboardType.K8);break;
        }
    }//GEN-LAST:event_combo_keyboardConfigActionPerformed

    private static Font font = new Font("Tahoma", Font.PLAIN, 14);
    private static TrueTypeFont trueTypeFont;

    private int read_keyboard_key(int lastkey) throws LWJGLException
    {
        String place = tKeys.getValueAt(tKeys.getSelectedRow(), 0).toString();
        if(Display.isCreated())throw new LWJGLException();
        
        Display.setDisplayMode(new DisplayMode(200,50));
        Display.setTitle(place);
        Display.setVSyncEnabled(true);
        Display.setIcon(null);
        Display.create();
        Display.setLocation(-1, -1);

        // enable textures since we're going to use these for our sprites
        GL11.glEnable(GL11.GL_TEXTURE_2D);

        // disable the OpenGL depth test since we're rendering 2D graphics
        GL11.glDisable(GL11.GL_DEPTH_TEST);

        // enable apha blending
        GL11.glEnable(GL11.GL_BLEND);
        GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);

        GL11.glMatrixMode(GL11.GL_PROJECTION);
        GL11.glLoadIdentity();

        GL11.glOrtho(0, 200, 50, 0, -1, 1);

        GL11.glClear(GL11.GL_COLOR_BUFFER_BIT);
        GL11.glMatrixMode(GL11.GL_MODELVIEW);
        GL11.glLoadIdentity();

        trueTypeFont = new TrueTypeFont(font, false);
        
        

        // TODO: there should be some kind of text on the display to
        // tell the user to press a key or something

        int code;
        do{
            Display.update();
            trueTypeFont.drawString(10, 23, "Press a KEY for "+place, 1, -1);
            trueTypeFont.drawString(10, 39, "Last assign was "+Keyboard.getKeyName(lastkey), 1, -1);
            Keyboard.next();
            if(Display.isCloseRequested() || Keyboard.getEventKey() == Keyboard.KEY_ESCAPE)
                code = lastkey;
            else
                code = Keyboard.getEventKey();
        }
        while(code == Keyboard.CHAR_NONE);
        trueTypeFont.destroy();
        Display.destroy();
        return code;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton bAddFolder;
    private static javax.swing.JButton bCancel;
    private static javax.swing.JButton bSave;
    private static javax.swing.JComboBox combo_keyboardConfig;
    private static javax.swing.JLabel jLabel1;
    private static javax.swing.JSeparator jSeparator1;
    private static javax.swing.JPanel panel_folders;
    private static javax.swing.JTable tKeys;
    private static javax.swing.JScrollPane tKeys_scroll;
    // End of variables declaration//GEN-END:variables

}