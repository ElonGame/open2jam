


plan to change the current engine implementation to a time based solution.


basically, each note is assigned the time when it should pass the red line, 
and the engine will draw the notes on the screen based on the difference between 
the note time and the current time.


on the buffer:
    bpm:
        buffer_bpm = bpm

    measure:
        buffer_timer += ( 240/buffer_bpm * (1-buffer_measure_pointer) * measure_size )
        buffer_measure_pointer = 0

    note:
        buffer_timer += ( 240/buffer_bpm * (note_position-buffer_measure_pointer) * measure_size )
        buffer_measure_pointer = note_position
        note_time = buffer_timer


on the renderer:
    note:
        screen_pos = (note_time - real_timer) / note_speed


still need to resolve:
	fractional_measure

---------------------------------------

on a related note, this would allow us to use a time based judgment.

the only obvious problem I see is that o2jam definitely doesn't use time judgment
and this would create differences in some cases,(e.g. zl), but most people would say
that's a flaw in o2jam, so I'm not sure this is a problem at all.

